buildscript {
  ext {
    springBootVersion = '1.3.2.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath "se.transmode.gradle:gradle-docker:1.2"
    classpath group: 'com.cinnober.gradle', name: 'semver-git', version: '2.2.0'
  }
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'
apply plugin: 'com.cinnober.gradle.semver-git'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  compile 'org.springframework.boot:spring-boot-devtools:1.3.2.RELEASE'
  compile 'org.springframework.boot:spring-boot-starter-web:1.3.2.RELEASE'
  compile 'org.springframework.boot:spring-boot-starter-security:1.3.2.RELEASE'
  compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.3.2.RELEASE'
  compile 'org.projectlombok:lombok:1.16.6'
  compile 'org.hsqldb:hsqldb:2.3.3'
  compile 'io.jsonwebtoken:jjwt:0.6.0'

  testCompile 'org.springframework.boot:spring-boot-starter-test:1.3.2.RELEASE'
  testCompile 'org.springframework.security:spring-security-test:4.0.3.RELEASE'
}

jar {
  from('../frontend/dist') {
    into 'static'
  }
}

jar.dependsOn(':frontend:assemble')

task buildDocker(type: Docker) {
  baseImage = 'develar/java:latest'
  push = false
  tag = 'geowarin/boot-react'
  addFile {
    from jar
    rename {'app.jar'}
  }
  entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
  exposePort(8080)
}

buildDocker.dependsOn(build)
